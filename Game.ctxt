#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\ \r\n\ \ to\ make\ it\ more\ interesting\!\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ \ Alex\ Zandman,\ Joost\ Perdok\r\n\ @version\ 2020.23.1\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=void\ pickupItem(Command)
comment10.text=\r\n\ Lets\ the\ player\ pickup\ an\ item.\ First\ it\ checks\ if\ the\ item\ is\ in\ the\ room,\ then\ it\ checks\ if\ the\ item\ is\ a\ trap\ or\ not.\ After\ that\ it\ checks\ if\ it\ is\ a\ \r\n\ key\ or\ candycane,\ because\ these\ are\ special\ items.\ Then\ it\ looks\ into\ the\ inventory\ to\ see\ if\ the\ item\ is\ already\ present\ in\ the\ inventory.\ \r\n\ If\ it\ is,\ it\ will\ increase\ the\ amount\ of\ the\ item\ by\ 1.\ If\ it\ isnt,\ it\ will\ add\ the\ item\ as\ a\ whole\ to\ the\ inventory.\r\n\ Finally\ it\ removes\ the\ item\ from\ the\ room.\r\n\ \r\n\ @param\ command\ -\ It\ first\ checks\ if\ the\ command\ is\ given\ and\ if\ it\ has\ a\ second\ word\ (the\ item\ you\ want\ to\ pick\ up)\r\n\ \r\n
comment11.params=command
comment11.target=void\ useItem(Command)
comment12.params=array
comment12.target=java.lang.String\ randomItem(java.util.ArrayList)
comment12.text=\r\n\ Retrieves\ a\ random\ index\ of\ an\ array\ and\ returns\ it.\r\n\ @param\ array\ -\ the\ random\ index\ is\ retrieved\ from\ the\ desired\ array\r\n
comment13.params=
comment13.target=void\ printHelp()
comment13.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment14.params=
comment14.target=void\ hitGrinch()
comment14.text=\r\n\ Combat\ system\ for\ the\ bonusroom,\ in\ this\ method\ both\ the\ player\ will\ hit\ the\ Grinch\ and\ the\ Grinch\ will\ hit\ the\ player.\r\n\ \r\n
comment15.params=command
comment15.target=void\ goRoom(Command)
comment15.text=\ \r\n\ Try\ to\ go\ in\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment16.params=command
comment16.target=void\ talkTo(Command)
comment16.text=\r\n\ Method\ to\ use\ the\ talk_to\ command,\ which\ lets\ the\ player\ talk\ to\ npcs.\r\n\ @param\ command\ -\ if\ the\ command\ is\ issued,\ and\ it\ has\ an\ second\ word,\ then\ it\ will\ use\ the\ method.\r\n\ \r\n
comment17.params=question\ answer
comment17.target=void\ askForAnswer(java.lang.String,\ java.lang.Integer)
comment17.text=\r\n\ Scans\ userinput\ and\ checks\ if\ answer\ corresponds\ with\ the\ correct\ answer.\r\n\ @param\ question\ -\ is\ used\ to\ print\ the\ question,\ that\ the\ ncp\ has\r\n\ @param\ answer\ -\ the\ answer,\ if\ the\ player's\ answer\ is\ similar\ to\ this\ one,\ the\ puzzle\ is\ solved.\r\n
comment18.params=command
comment18.target=void\ goBack(Command)
comment18.text=\r\n\ Return\ the\ player\ to\ the\ previous\ room.\r\n\ @param\ command\ -\ if\ command\ is\ issued,\ then\ method\ is\ used.\r\n
comment19.params=command
comment19.target=boolean\ quit(Command)
comment19.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment20.params=
comment20.target=void\ getSelectedLanguage()
comment20.text=\r\n\ Lets\ the\ user\ see\ his\ input,\ used\ for\ the\ language\ selection\ at\ the\ start\ of\ the\ game.\r\n
comment3.params=
comment3.target=void\ createRooms()
comment3.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment4.params=
comment4.target=void\ play()
comment4.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment6.params=command
comment6.target=boolean\ processCommand(Command)
comment6.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment7.params=
comment7.target=void\ amountLives()
comment7.text=\r\n\ Gets\ the\ amount\ of\ player\ lives\ and\ prints\ these\ for\ the\ player\ to\ see\r\n
comment8.params=
comment8.target=void\ showInventory()
comment8.text=\r\n\ If\ the\ inventory\ is\ not\ empty,\ it\ prints\ every\ Item\ in\ the\ inventory.\ If\ it\ is\ empty,\ it\ prints\ that\ the\ inventory\ is\ empty\r\n
comment9.params=
comment9.target=void\ showRoom()
comment9.text=\r\n\ Shows\ what\ items\ and\ characters\ are\ in\ the\ room\r\n
numComments=21
